[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\User\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\User\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.11 (Oracle Corporation Java 1.8.0_202)
[debug] Load.defaultLoad until apply took 396.553ms
[debug]           Load.loadUnit: plugins took 1139.1152ms
[debug]           Load.loadUnit: defsScala took 1.1733ms
[debug] [Loading] Scanning directory C:\pyspark\flink_project\Flight_Assignment\project
[debug]             Load.loadUnit: mkEval took 238.5092ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\pyspark\flink_project\Flight_Assignment\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 120.8481 ms
[info] loading settings for project flight_assignment-build from idea.sbt...
[debug]               Load.resolveProject(flight_assignment-build) took 437.7882ms
[debug]             Load.loadTransitive: finalizeProject(Project(id flight_assignment-build, base: C:\pyspark\flink_project\Flight_Assignment\project, plugins: List(<none>))) took 593.7402ms
[debug] [Loading] Done in C:\pyspark\flink_project\Flight_Assignment\project, returning: (flight_assignment-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 18999.1749ms
[debug]           Load.loadUnit: cleanEvalClasses took 35.3817ms
[debug]         Load.loadUnit(file:/C:/pyspark/flink_project/Flight_Assignment/project/, ...) took 20246.1015ms
[debug]       Load.apply: load took 20949.614ms
[debug]       Load.apply: resolveProjects took 14.5868ms
[debug]       Load.apply: finalTransforms took 501.9047ms
[debug]       Load.apply: config.delegates took 39.1272ms
[debug]       Load.apply: Def.make(settings)... took 3237.0273ms
[debug]       Load.apply: structureIndex took 910.1283ms
[debug]       Load.apply: mkStreams took 8.3558ms
[info] loading project definition from C:\pyspark\flink_project\Flight_Assignment\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Canceling execution...
[error] Cancelled: loadp
[error] Cancelled: loadp
[error] Use 'last' for the full log.
[debug] > Exec(loadFailed, None, None)
[warn] Project loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore? (default: r)
